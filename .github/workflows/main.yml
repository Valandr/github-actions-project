name: CI/CD workflow

env:
  SERVER_USER: 'root'
  SERVER_IP: '151.80.119.61'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main

jobs:
  tests_backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    steps:
      - name: checkout le code
        uses: actions/checkout@v4

      - name: installer Node.js
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: ./server/package-lock.json

      - name: installer les dépendances
        run: |
          npm ci --prefer-offline

      - name: vérifie le code
        run: |
          npm run lint

      - name: vérifie les vulnérabilités
        run: |
          npm audit fix --force
      - name: exécute les tests
        run: |
          npm run test:ci

      - name: Upload du rapport de couverture sur Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  checks_frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    steps:
      - name: checkout le code
        uses: actions/checkout@v4

      - name: installer Node.js
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: ./client/package-lock.json

      - name: installer les dépendances
        run: |
          npm install

      - name: vérifie le code
        run: npm run lint
      - name: vérifie les vulnérabilités
        run: |
          npm audit fix --force

  build_frontend:
    needs: [checks_frontend]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    steps:
      - name: checkout le code
        uses: actions/checkout@v4

      - name: installer Node.js
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: ./client/package-lock.json

      - name: installer les dépendances
        run: |
          npm install

      - name: build le frontend
        run: npm run build

      - name: upload build artefacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-dist
          path: client/dist/
          retention-days: 1

  test_e2e_frontend:
    needs: [build_frontend]
    runs-on: ubuntu-latest
    steps:
      - name: checkout le code
        uses: actions/checkout@v4

      - name: installer Node.js
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: ./**/package-lock.json
      - name: Installer les dépendances
        run: npm install

      - name: download build artefacts
        uses: actions/download-artifact@v3
        with:
          name: frontend-dist
          path: ./client/dist/
          retention-days: 1
      - name: start backend
        run: |
          cd ./server
          npm start &

      - name: exec cypress
        uses: cypress-io/github-action@v6
        with:
          working-directory: ./client
          browser: chrome
          start: npm run preview
          wait-on: http://localhost:4173
          wait-on-timeout: 60
          config: baseUrl=http://localhost:4173

  deploy:
    needs: [tests_backend, test_e2e_frontend]
    runs-on: ubuntu-latest
    steps:
      - name: checkout le code
        uses: actions/checkout@v4

      - name: télécharger l'artéfact du frontend
        uses: actions/download-artifact@v3
        with:
          name: frontend-dist
          path: ./dist

      - name: déployer sur le serveur
        run: |
          eval $(ssh-agent -s)
          ssh-add - <<< "${{ secrets.OVH_PROD_PKEY }}"
          mkdir -p ~/.ssh
          ssh-keyscan -H SERVER_IP >> ~/.ssh/known_hosts
          scp -r ./dist SERVER_USER@SERVER_IP:/var/www
          scp -r ./server SERVER_USER@SERVER_IP:/var/www
          ssh SERVER_USER@SERVER_IP "cd /var/www/server && npm install --omit=dev"
          ssh SERVER_USER@SERVER_IP "cd /var/www/server && pm2 startOrRestart ecosystem.config.js --env production && pm2 save"
